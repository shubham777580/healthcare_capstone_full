{"ast":null,"code":"var _jsxFileName = \"D:\\\\healthcare_react\\\\src\\\\Pages\\\\Products\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useProduct } from \"../../Context/ProductContext\";\nimport styles from \"./styles.module.css\";\nimport Spinner from \"../../Components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { useCart } from '../../Context/CartContext';\nimport { useFavorite } from '../../Context/FavoriteContext';\nimport Card from \"../../Components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const {\n    addToCart,\n    items\n  } = useCart();\n  const {\n    addToFavorite,\n    favoriteItems\n  } = useFavorite();\n  const {\n    productList,\n    loading,\n    setProductID,\n    setCategory\n  } = useProduct();\n  const {\n    category_id\n  } = useParams();\n  useEffect(() => {\n    setCategory(category_id);\n  }, [category_id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cardGroup,\n    children: !loading ? productList === null || productList === void 0 ? void 0 : productList.map((item, index) => {\n      const findCartItem = items.find(cart_item => cart_item.id === item.id);\n      const findFavoriteItem = favoriteItems.find(favorite_item => favorite_item.id === item.id);\n      return /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        setProductID: setProductID,\n        findCartItem: findCartItem,\n        findFavoriteItem: findFavoriteItem,\n        addToCart: addToCart,\n        addToFavorite: addToFavorite\n      }, `product-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"hoCmzss6XTyxKVvkiVIzfSYxlnk=\", false, function () {\n  return [useCart, useFavorite, useProduct, useParams];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["D:/healthcare_react/src/Pages/Products/index.js"],"names":["React","useEffect","useProduct","styles","Spinner","useParams","useCart","useFavorite","Card","Products","addToCart","items","addToFavorite","favoriteItems","productList","loading","setProductID","setCategory","category_id","cardGroup","map","item","index","findCartItem","find","cart_item","id","findFavoriteItem","favorite_item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAqBL,OAAO,EAAlC;AACA,QAAM;AAACM,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAiCN,WAAW,EAAlD;AAEA,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,YAAxB;AAAsCC,IAAAA;AAAtC,MAAsDf,UAAU,EAAtE;AAEA,QAAM;AAACgB,IAAAA;AAAD,MAAgBb,SAAS,EAA/B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,WAAW,CAACC,WAAD,CAAX;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACgB,SAAvB;AAAA,cACG,CAACJ,OAAD,GACCD,WADD,aACCA,WADD,uBACCA,WAAW,CAAEM,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,YAAMC,YAAY,GAAGZ,KAAK,CAACa,IAAN,CAAYC,SAAD,IAAeA,SAAS,CAACC,EAAV,KAAiBL,IAAI,CAACK,EAAhD,CAArB;AACA,YAAMC,gBAAgB,GAAGd,aAAa,CAACW,IAAd,CAAoBI,aAAD,IAAmBA,aAAa,CAACF,EAAd,KAAqBL,IAAI,CAACK,EAAhE,CAAzB;AACA,0BACE,QAAC,IAAD;AAA+B,QAAA,IAAI,EAAEL,IAArC;AAA2C,QAAA,YAAY,EAAEL,YAAzD;AAAuE,QAAA,YAAY,EAAEO,YAArF;AAAmG,QAAA,gBAAgB,EAAEI,gBAArH;AAAuI,QAAA,SAAS,EAAEjB,SAAlJ;AAA6J,QAAA,aAAa,EAAEE;AAA5K,SAAY,WAAUU,KAAM,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAND,CADD,gBASC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA3BD;;GAAMb,Q;UACuBH,O,EACYC,W,EAEqBL,U,EAEtCG,S;;;KANlBI,Q;AA6BN,eAAeA,QAAf","sourcesContent":["import React, {useEffect} from \"react\";\nimport { useProduct } from \"../../Context/ProductContext\";\nimport styles from \"./styles.module.css\";\nimport Spinner from \"../../Components/Spinner\";\nimport { useParams } from \"react-router-dom\";\nimport { useCart } from '../../Context/CartContext'\nimport { useFavorite } from '../../Context/FavoriteContext'\nimport Card from \"../../Components/Card\";\n\nconst Products = () => {\n  const {addToCart, items} = useCart()\n  const {addToFavorite, favoriteItems} = useFavorite()\n\n  const { productList, loading, setProductID, setCategory } = useProduct();\n  \n  const {category_id} = useParams()\n\n  useEffect(() => {\n    setCategory(category_id)\n  }, [category_id])\n\n  return (\n    <div className={styles.cardGroup}>\n      {!loading ? (\n        productList?.map((item, index) => {\n          const findCartItem = items.find((cart_item) => cart_item.id === item.id)\n          const findFavoriteItem = favoriteItems.find((favorite_item) => favorite_item.id === item.id)\n          return (\n            <Card key={`product-${index}`} item={item} setProductID={setProductID} findCartItem={findCartItem} findFavoriteItem={findFavoriteItem} addToCart={addToCart} addToFavorite={addToFavorite} />\n          );\n        })\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}
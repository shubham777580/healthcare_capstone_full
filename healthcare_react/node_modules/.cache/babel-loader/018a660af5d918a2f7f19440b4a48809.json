{"ast":null,"code":"const validations = (currentUser, users) => {\n  console.log(users);\n  const isUser = users.some(item => item.email === currentUser.email);\n  let errors = {};\n\n  if (!currentUser.firstName) {\n    errors.firstName = \"First name is required.\";\n  }\n\n  if (!currentUser.lastName) {\n    errors.lastName = \"Last name is required.\";\n  }\n\n  if (!currentUser.email) {\n    errors.email = \"Email is required.\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(currentUser.email)) {\n    errors.email = \"Email is invalid.\";\n  } else if (isUser) {\n    errors.email = \"This email address is already being used!\";\n  }\n\n  if (!currentUser.password) {\n    errors.password = \"Password is required.\";\n  } else if (currentUser.password.length < 8) {\n    errors.password = \"Password must be more than eight characters.\";\n  }\n\n  if (!currentUser.passwordConfirm) {\n    errors.passwordConfirm = \"Password confirmation is required.\";\n  } else if (currentUser.passwordConfirm !== currentUser.password) {\n    errors.passwordConfirm = \"Password doesn't match.\";\n  }\n\n  return errors;\n};\n\nexport default validations;","map":{"version":3,"sources":["D:/healthcare_react/e-commerce-react-app-main/e-commerce-react-app-main/src/Pages/Auth/Signup/validations.js"],"names":["validations","currentUser","users","console","log","isUser","some","item","email","errors","firstName","lastName","test","password","length","passwordConfirm"],"mappings":"AACA,MAAMA,WAAW,GAAG,CAACC,WAAD,EAAcC,KAAd,KAAwB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,MAAM,GAAGH,KAAK,CAACI,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeP,WAAW,CAACO,KAAhD,CAAf;AAEA,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAI,CAACR,WAAW,CAACS,SAAjB,EAA4B;AAC1BD,IAAAA,MAAM,CAACC,SAAP,GAAmB,yBAAnB;AACD;;AACD,MAAI,CAACT,WAAW,CAACU,QAAjB,EAA2B;AACzBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,wBAAlB;AACD;;AACD,MAAI,CAACV,WAAW,CAACO,KAAjB,EAAwB;AACtBC,IAAAA,MAAM,CAACD,KAAP,GAAe,oBAAf;AACD,GAFD,MAEO,IAAI,CAAC,eAAeI,IAAf,CAAoBX,WAAW,CAACO,KAAhC,CAAL,EAA6C;AAClDC,IAAAA,MAAM,CAACD,KAAP,GAAe,mBAAf;AACD,GAFM,MAEA,IAAIH,MAAJ,EAAY;AACjBI,IAAAA,MAAM,CAACD,KAAP,GAAe,2CAAf;AACD;;AACD,MAAI,CAACP,WAAW,CAACY,QAAjB,EAA2B;AACzBJ,IAAAA,MAAM,CAACI,QAAP,GAAkB,uBAAlB;AACD,GAFD,MAEO,IAAIZ,WAAW,CAACY,QAAZ,CAAqBC,MAArB,GAA8B,CAAlC,EAAqC;AAC1CL,IAAAA,MAAM,CAACI,QAAP,GAAkB,8CAAlB;AACD;;AACD,MAAI,CAACZ,WAAW,CAACc,eAAjB,EAAkC;AAChCN,IAAAA,MAAM,CAACM,eAAP,GAAyB,oCAAzB;AACD,GAFD,MAEO,IAAId,WAAW,CAACc,eAAZ,KAAgCd,WAAW,CAACY,QAAhD,EAA0D;AAC/DJ,IAAAA,MAAM,CAACM,eAAP,GAAyB,yBAAzB;AACD;;AAED,SAAON,MAAP;AAED,CAhCD;;AAkCA,eAAeT,WAAf","sourcesContent":["\nconst validations = (currentUser, users) => {\n  console.log(users)\n  const isUser = users.some((item) => item.email === currentUser.email)\n\n  let errors = {}\n\n  if (!currentUser.firstName) {\n    errors.firstName = \"First name is required.\"\n  }\n  if (!currentUser.lastName) {\n    errors.lastName = \"Last name is required.\"\n  }\n  if (!currentUser.email) {\n    errors.email = \"Email is required.\"\n  } else if (!/\\S+@\\S+\\.\\S+/.test(currentUser.email)) {\n    errors.email = \"Email is invalid.\"\n  } else if (isUser) {\n    errors.email = \"This email address is already being used!\"\n  }\n  if (!currentUser.password) {\n    errors.password = \"Password is required.\"\n  } else if (currentUser.password.length < 8) {\n    errors.password = \"Password must be more than eight characters.\"\n  }\n  if (!currentUser.passwordConfirm) {\n    errors.passwordConfirm = \"Password confirmation is required.\"\n  } else if (currentUser.passwordConfirm !== currentUser.password) {\n    errors.passwordConfirm = \"Password doesn't match.\"\n  }\n\n  return errors\n\n}\n\nexport default validations\n"]},"metadata":{},"sourceType":"module"}
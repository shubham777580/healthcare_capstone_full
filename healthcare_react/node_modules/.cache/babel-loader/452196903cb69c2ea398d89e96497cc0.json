{"ast":null,"code":"var _jsxFileName = \"D:\\\\healthcare_react\\\\e-commerce-react-app-main\\\\e-commerce-react-app-main\\\\src\\\\Context\\\\CartContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, createContext, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst defaultCart = JSON.parse(localStorage.getItem('cart')) || [];\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [items, setItems] = useState(defaultCart);\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(items));\n  }, [items]);\n\n  const addToCart = (data, findCartItem) => {\n    if (!findCartItem) {\n      return setItems(items => [data, ...items]);\n    }\n\n    const filtered = items.filter(item => item.id !== findCartItem.id);\n    setItems(filtered);\n  };\n\n  const removeFromCart = item_id => {\n    const filtered = items.filter(item => item.id !== item_id);\n    setItems(filtered);\n  };\n\n  const values = {\n    items,\n    setItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"7UKAXTIEFNVKb7tp6hDUz6kCdTg=\");\n\n_c = CartProvider;\n\nconst useCart = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { CartProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["D:/healthcare_react/e-commerce-react-app-main/e-commerce-react-app-main/src/Context/CartContext.js"],"names":["useState","createContext","useContext","useEffect","CartContext","defaultCart","JSON","parse","localStorage","getItem","CartProvider","children","items","setItems","setItem","stringify","addToCart","data","findCartItem","filtered","filter","item","id","removeFromCart","item_id","values","useCart"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,OAA/D;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEA,MAAMI,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,EAAhE;;AAEA,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACK,WAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACS,SAAL,CAAeH,KAAf,CAA7B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMI,SAAS,GAAG,CAACC,IAAD,EAAOC,YAAP,KAAwB;AACxC,QAAG,CAACA,YAAJ,EAAkB;AAChB,aAAOL,QAAQ,CAAED,KAAD,IAAW,CAACK,IAAD,EAAO,GAAGL,KAAV,CAAZ,CAAf;AACD;;AAED,UAAMO,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYJ,YAAY,CAACI,EAAhD,CAAjB;AACAT,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAPD;;AASA,QAAMI,cAAc,GAAIC,OAAD,IAAa;AAClC,UAAML,QAAQ,GAAGP,KAAK,CAACQ,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYE,OAAnC,CAAjB;AACAX,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAHD;;AAKA,QAAMM,MAAM,GAAG;AACbb,IAAAA,KADa;AAEbC,IAAAA,QAFa;AAGbG,IAAAA,SAHa;AAIbO,IAAAA;AAJa,GAAf;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,MAA7B;AAAA,cAAsCd;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BD;;GAAMD,Y;;KAAAA,Y;;AA+BN,MAAMgB,OAAO,GAAG;AAAA;;AAAA,SAAMxB,UAAU,CAACE,WAAD,CAAhB;AAAA,CAAhB;;IAAMsB,O;;AAEN,SAAShB,YAAT,EAAuBgB,OAAvB","sourcesContent":["import { useState, createContext, useContext, useEffect } from 'react'\n\nconst CartContext = createContext()\n\nconst defaultCart = JSON.parse(localStorage.getItem('cart')) || []\n\nconst CartProvider = ({children}) => {\n  const [items, setItems] = useState(defaultCart)\n\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(items))\n  }, [items])\n\n  const addToCart = (data, findCartItem) => {\n    if(!findCartItem) {\n      return setItems((items) => [data, ...items] )\n    }\n\n    const filtered = items.filter((item) => item.id !== findCartItem.id)\n    setItems(filtered)\n  }\n\n  const removeFromCart = (item_id) => {\n    const filtered = items.filter((item) => item.id !== item_id)\n    setItems(filtered)\n  }\n\n  const values = {\n    items,\n    setItems,\n    addToCart,\n    removeFromCart,\n  }\n\n  return <CartContext.Provider value={values}>{children}</CartContext.Provider>\n}\n\nconst useCart = () => useContext(CartContext)\n\nexport { CartProvider, useCart }"]},"metadata":{},"sourceType":"module"}
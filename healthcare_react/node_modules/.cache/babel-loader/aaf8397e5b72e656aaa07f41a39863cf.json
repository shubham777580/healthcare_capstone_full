{"ast":null,"code":"var _jsxFileName = \"D:\\\\healthcare_react\\\\src\\\\Context\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst defaultUser = JSON.parse(localStorage.getItem(\"user\")) || {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirm: \"\",\n  address: \"\"\n};\nconst defaultUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [users, setUsers] = useState(defaultUsers);\n  const [currentUser, setCurrentUser] = useState(defaultUser);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const login = (email, password) => {\n    const userData = Object.values(users);\n    const indexOfUser = users.map(item => item.email).indexOf(email);\n\n    if (indexOfUser && userData[indexOfUser].password === password) {\n      const finalUser = userData[indexOfUser];\n      setCurrentUser(finalUser);\n      setLoggedIn(true);\n      localStorage.setItem(\"user\", JSON.stringify(finalUser));\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    setCurrentUser({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      address: \"\"\n    });\n    setLoggedIn(false);\n  };\n\n  useEffect(() => {\n    const isEmpty = Object.values(currentUser).every(value => value ? true : false);\n\n    if (Object.keys(errors).length > 0) {\n      setLoggedIn(false);\n    } else if (!isEmpty) {\n      setLoggedIn(false);\n    } else {\n      const userData = [...users, currentUser];\n      setUsers(userData);\n      localStorage.setItem(\"users\", JSON.stringify(userData));\n      localStorage.setItem(\"user\", JSON.stringify(currentUser));\n      setLoggedIn(true);\n    }\n  }, [errors]);\n  const value = {\n    currentUser,\n    setCurrentUser,\n    users,\n    loggedIn,\n    errors,\n    loggedIn,\n    setErrors,\n    setIsSubmitting,\n    logout,\n    login\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"AGzStFbqqrMvOxlI6u8Kx1s/A0A=\");\n\n_c = AuthProvider;\n\nconst useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["D:/healthcare_react/src/Context/AuthContext.js"],"names":["createContext","useState","useEffect","useContext","useNavigate","AuthContext","defaultUser","JSON","parse","localStorage","getItem","firstName","lastName","email","password","passwordConfirm","address","defaultUsers","AuthProvider","children","users","setUsers","currentUser","setCurrentUser","isSubmitting","setIsSubmitting","loggedIn","setLoggedIn","errors","setErrors","login","userData","Object","values","indexOfUser","map","item","indexOf","finalUser","setItem","stringify","logout","removeItem","isEmpty","every","value","keys","length","useAuth"],"mappings":"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","sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst AuthContext = createContext()\n\nconst defaultUser = JSON.parse(localStorage.getItem(\"user\")) || {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  passwordConfirm: \"\",\n  address: \"\",\n}\nconst defaultUsers = JSON.parse(localStorage.getItem(\"users\")) || []\n\nconst AuthProvider = ({ children }) => {\n  const [users, setUsers] = useState(defaultUsers)\n  const [currentUser, setCurrentUser] = useState(defaultUser)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [errors, setErrors] = useState({})\n\n  const login = (email, password) => {\n    const userData = Object.values(users)\n    const indexOfUser = users.map((item) => item.email).indexOf(email)\n    if (indexOfUser && userData[indexOfUser].password === password) {\n      const finalUser = userData[indexOfUser]\n      setCurrentUser(finalUser)\n      setLoggedIn(true)\n      localStorage.setItem(\"user\", JSON.stringify(finalUser))\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"user\")\n    setCurrentUser({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      address: \"\",\n    })\n    setLoggedIn(false)\n  }\n\n  useEffect(() => {\n    const isEmpty = Object.values(currentUser).every(value => value ? true : false)\n    if(Object.keys(errors).length > 0) {\n      setLoggedIn(false)\n    } else if (!isEmpty) {\n      setLoggedIn(false)\n    } else {\n      const userData = [...users, currentUser]\n      setUsers(userData)\n      localStorage.setItem(\"users\", JSON.stringify(userData))\n      localStorage.setItem(\"user\", JSON.stringify(currentUser))\n      setLoggedIn(true)\n    }\n  }, [errors])\n\n  const value = {\n    currentUser,\n    setCurrentUser,\n    users,\n    loggedIn,\n    errors,\n    loggedIn,\n    setErrors,\n    setIsSubmitting,\n    logout,\n    login,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nconst useAuth = () => useContext(AuthContext)\n\nexport { AuthProvider, useAuth }"]},"metadata":{},"sourceType":"module"}
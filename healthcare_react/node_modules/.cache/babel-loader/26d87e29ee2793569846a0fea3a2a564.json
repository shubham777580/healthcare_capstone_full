{"ast":null,"code":"var _jsxFileName = \"D:\\\\healthcare_react\\\\src\\\\Context\\\\ProductContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport const ProductProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [productList, setProductList] = useState([]);\n  const [categories, setCategories] = useState();\n  const [category, setCategory] = useState(\"/products\");\n  const [productID, setProductID] = useState(\"\");\n  const [product, setProduct] = useState({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n\n    const getCategories = async () => {\n      let categoriesData;\n      await axios(\"http://localhost:7056/api/Category_name\").then( //await axios(\"https://fakestoreapi.com/products/categories\").then(\n      res => categoriesData = res.data.map(item => item.replace(/^(.)|\\s+(.)/g, c => c.toUpperCase())));\n      setCategories(categoriesData);\n    };\n\n    getCategories();\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n\n    const getProductData = async () => {\n      if (category && category.length > 0) {\n        await axios.get( //`http://localhost:7056/api/Products/category/${category}`\n        `https://fakestoreapi.com/products/category/${category}`).then(res => {\n          setProductList(res.data);\n          setLoading(false);\n        });\n      } else {\n        //await axios.get(`http://localhost:7056/api/Products`).then((res) => {\n        await axios.get(`https://fakestoreapi.com/products`).then(res => {\n          setProductList(res.data);\n          setCategory(\"\");\n          setLoading(false);\n        });\n      }\n    };\n\n    getProductData();\n  }, [category]);\n  useEffect(() => {\n    setLoading(true);\n\n    const getProductDetail = async () => {\n      //productID && productID.length > 0 && await axios.get(`http://localhost:7056/api/Products/${productID}`).then(\n      productID && productID.length > 0 && (await axios.get(`https://fakestoreapi.com/products/${productID}`).then(res => {\n        setProduct(res.data);\n        setLoading(false);\n      }));\n    };\n\n    getProductDetail();\n  }, [productID]);\n  const values = {\n    product,\n    productList,\n    productID,\n    setProductID,\n    categories,\n    setCategory,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: values,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductProvider, \"bmDACILw4nHWnEDCOdVe2ZngmY0=\");\n\n_c = ProductProvider;\nexport const useProduct = () => {\n  _s2();\n\n  return useContext(ProductContext);\n};\n\n_s2(useProduct, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["D:/healthcare_react/src/Context/ProductContext.js"],"names":["axios","createContext","useContext","useEffect","useState","ProductContext","ProductProvider","children","productList","setProductList","categories","setCategories","category","setCategory","productID","setProductID","product","setProduct","loading","setLoading","getCategories","categoriesData","then","res","data","map","item","replace","c","toUpperCase","getProductData","length","get","getProductDetail","values","useProduct"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { createContext, useContext, useEffect, useState } from 'react'\nconst ProductContext = createContext()\n\n\nexport const ProductProvider = ({ children }) => {\n  const [productList, setProductList] = useState([])\n  const [categories, setCategories] = useState()\n  const [category, setCategory] = useState(\"/products\")\n  const [productID, setProductID] = useState(\"\")\n  const [product, setProduct] = useState({})\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    setLoading(true)\n    const getCategories = async () => {\n      \n      let categoriesData\n      await axios(\"http://localhost:7056/api/Category_name\").then(\n      //await axios(\"https://fakestoreapi.com/products/categories\").then(\n        (res) =>\n          (categoriesData = res.data.map((item) =>\n            item.replace(/^(.)|\\s+(.)/g, (c) => c.toUpperCase())\n          ))\n      )\n      setCategories(categoriesData)\n    }\n    getCategories()\n    setLoading(false)\n  }, [])\n\n  useEffect(() => {\n    setLoading(true)\n    const getProductData = async () => {\n      \n      if (category && category.length > 0) {\n        await axios.get(\n          //`http://localhost:7056/api/Products/category/${category}`\n          `https://fakestoreapi.com/products/category/${category}`\n        ).then((res) => {\n          setProductList(res.data)\n          setLoading(false)\n        })\n      } else {\n        //await axios.get(`http://localhost:7056/api/Products`).then((res) => {\n        await axios.get(`https://fakestoreapi.com/products`).then((res) => {\n          setProductList(res.data)\n          setCategory(\"\")\n          setLoading(false)\n        })\n      }\n    }\n    getProductData()\n  }, [category])\n\n  useEffect(() => {\n    setLoading(true)\n    const getProductDetail = async () => {   \n      \n       //productID && productID.length > 0 && await axios.get(`http://localhost:7056/api/Products/${productID}`).then(\n        productID && productID.length > 0 && await axios.get(`https://fakestoreapi.com/products/${productID}`).then(\n        (res) => {\n          setProduct(res.data)\n          setLoading(false)\n        }\n      )\n    }\n    getProductDetail()\n  }, [productID])\n\n  const values = {\n    product,\n    productList,\n    productID,\n    setProductID,\n    categories,\n    setCategory,\n    loading,\n  }\n\n  return (\n    <ProductContext.Provider value={values}>{children}</ProductContext.Provider>\n  )\n}\n\nexport const useProduct = () => useContext(ProductContext)"]},"metadata":{},"sourceType":"module"}